class Mino{static NUM=4;constructor(t,e,s,o){this.x=t,this.y=e,this.pattern=s,this.blocks=new Array(Mino.NUM);for(let o=0;o<Mino.NUM;o++)this.blocks[o]=[t+Pattern.SHAPES[s][o][0],e+Pattern.SHAPES[s][o][1]];this.isActive=o}static createMino(t,e,s,o){let i=Math.floor(Math.random()*Pattern.NUM),r=new Mino(t,e,i,s);return r.blocks.some((t=>o.getBlock(t[1],t[0]).getIsLocked()))&&(r=null),r}judgeLeft(t){return this.blocks.some((e=>t[e[1]][e[0]-1].getIsLocked()))}judgeRight(t){return this.blocks.some((e=>t[e[1]][e[0]+1].getIsLocked()))}judgeBottom(t){return this.blocks.some((e=>t[e[1]+1][e[0]].getIsLocked()))}moveLeft(t){if(!this.judgeLeft(t)){this.x-=1;for(let e=0;e<Mino.NUM;e++){let s=this.blocks[e];t[s[1]][s[0]].setLit(!1),s[0]-=1}}}moveRight(t){if(!this.judgeRight(t)){this.x+=1;for(let e=0;e<Mino.NUM;e++){let s=this.blocks[e];t[s[1]][s[0]].setLit(!1),s[0]+=1}}}moveDown(t){if(!this.judgeBottom(t)){this.y+=1;for(let e=0;e<Mino.NUM;e++){let s=this.blocks[e];t[s[1]][s[0]].setLit(!1),s[1]+=1}}}static myCopy(t){let e=new Array(Mino.NUM);for(let s=0;s<Mino.NUM;s++)e[s]=[t[s][0],t[s][1]];return e}rotateLeft(t){let e=Mino.myCopy(this.blocks);try{let e=0;for(let s=0;s<Mino.NUM;s++){let o=this.blocks[s];t[o[1]][o[0]].setLit(!1);let i=o[0]-this.x,r=o[1]-this.y;if([i,r]=[-r,i],[o[0],o[1]]=[this.x+i,this.y+r],o[1]>=Game.h||t[o[1]][o[0]]){let s=0,i=o[1];for(;i>=Game.h||t[i][o[0]].getIsLocked();)i--,s++;e=max(e,s)}}for(let t=0;t<Mino.NUM;t++)this.y-=e,this.blocks[t][1]-=e}catch(t){t instanceof TypeError?this.blocks=e:console.error(t)}}rotateRight(t){let e=Mino.myCopy(this.blocks);try{let e=0;for(let s=0;s<Mino.NUM;s++){let o=this.blocks[s];t[o[1]][o[0]].setLit(!1);let i=o[0]-this.x,r=o[1]-this.y;if([i,r]=[r,-i],[o[0],o[1]]=[this.x+i,this.y+r],o[1]>=Game.h||t[o[1]][o[0]]){let s=0,i=o[1];for(;i>=Game.h||t[i][o[0]].getIsLocked();)i--,s++;e=max(e,s)}}for(let t=0;t<Mino.NUM;t++)this.y-=e,this.blocks[t][1]-=e}catch(t){t instanceof TypeError?this.blocks=e:console.error(t)}}lock(t){let e=t.field,s=10**9;for(let t=0;t<Mino.NUM;t++){let o=this.blocks[t];e[o[1]][o[0]].setLit(!0),e[o[1]][o[0]].setIsLocked(!0),s=min(s,o[1])}this.isActive=!1,t.top=min(t.top,s)}draw(t){let e=t.field;if(this.isActive){if(this.judgeBottom(e)&&frameCount%30==0)return this.lock(t),void t.breakOut();if(keyIsPressed&&frameCount%6==0)switch(key){case"j":this.moveLeft(e);break;case"k":this.moveDown(e),this.moveDown(e),this.moveDown(e);break;case"l":this.moveRight(e);break;case"a":this.rotateLeft(e);break;case"d":this.rotateRight(e)}frameCount%t.fallSpeed==0&&this.moveDown(e);for(let t=0;t<Mino.NUM;t++){let s=this.blocks[t],o=e[s[1]][s[0]];o.setDesign(Pattern.DESINGS[this.pattern]),o.setLit(!0)}}}}