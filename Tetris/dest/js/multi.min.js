const Manager=require("./manager.min.js"),Tetris=require("./tetris.min.js"),Game=Tetris.Game,Mino=Tetris.Mino,Block=Tetris.Block,Pattern=Tetris.Pattern,Background=Tetris.Background,Mylib=Tetris.Mylib;Manager.init("multi");class Loading{constructor(t,a,s){this.p=t,this.x=a,this.y=s,this.pos=0,this.field=new Array(12);for(let e=0;e<3;e++)this.field[e]=new Block(t,a+e*Block.L+2*e,s,Pattern.NUM);for(let e=0;e<3;e++)this.field[e+3]=new Block(t,a+3*Block.L+6,s+e*Block.L+2*e,Pattern.NUM);var r=a+3*Block.L+6;for(let e=0;e<3;e++)this.field[e+6]=new Block(t,r-(e*Block.L+2*e),s+3*Block.L+6,Pattern.NUM);var i=s+3*Block.L+6;for(let e=0;e<3;e++)this.field[e+9]=new Block(t,a,i-(e*Block.L+2*e),Pattern.NUM);for(let e=0;e<4;e++)this.field[e].setLit(!0);Manager.loadingID1=setInterval(()=>{this.field[this.pos%12].setLit(!1),this.field[(this.pos+4)%12].setLit(!0),this.pos++},200),Manager.loadingID2=setInterval(()=>{var t=Mylib.rand(0,Pattern.NUM+1);for(let e=0;e<12;e++)this.field[e].setDesign(t)},1e3)}draw(){if(!Manager.gameStart){this.p.push(),this.p.fill(this.p.color(50,68,226)),this.p.textAlign(this.p.CENTER),this.p.text("対戦相手を待っています。。。",this.x+70,this.y-60);for(let e=0;e<12;e++)this.field[e].draw();this.p.pop()}}}class Opponent{constructor(s,e,t){this.p=s,this.x=e,this.y=t,this.score=0,this.combo=0,this.scoreX=e+329,this.scoreY=t-2,this.variablesForGameOver={isGameOver:!1,red:0},this.field=new Array(Game.H);for(let a=0;a<Game.H;a++){this.field[a]=new Array;for(let t=0;t<Game.W;t++){let e=new Block(s,this.x+t*Block.L+2*t,this.y+a*Block.L+2*a,Pattern.NUM);a!=Game.H-1&&0!=t&&t!=Game.W-1||(e.setLit(!0),e.setIsLocked(!0)),this.field[a].push(e)}}Manager.socket.on("updateScoreResponse",e=>{this.score=e}),Manager.socket.on("updateComboResponse",e=>{this.combo=e}),Manager.socket.on("sendFieldResponse",s=>{for(let a=0;a<Game.H;a++)for(let t=0;t<Game.W;t++){let e=this.field[a][t];var r=s[a][t];e.setLit(r[0]),e.setDesign(r[1])}}),Manager.socket.on("gameOverResponse",()=>{this.variablesForGameOver.isGameOver=!0})}gameOver(){this.p.push(),this.p.textSize(50),this.p.textAlign(this.p.LEFT),this.p.fill(this.variablesForGameOver.red,0,0),this.variablesForGameOver.red++,this.p.text("Game Over",this.x+26,this.y+350),this.p.pop();for(let e=0;e<Game.H;e++)this.field[e][0].draw();for(let e=0;e<Game.H;e++)this.field[e][Game.W-1].draw();for(let e=1;e<Game.W-1;e++)this.field[Game.H-1][e].draw()}showScoreBoad(){this.p.image(Pattern.scoreBoad,this.scoreX,this.scoreY),this.p.textSize(35),this.p.fill(255),this.p.text(this.score,this.scoreX+300,this.scoreY+50),this.p.text(this.combo,this.scoreX+300,this.scoreY+118)}draw(){if(this.showScoreBoad(),this.variablesForGameOver.isGameOver)this.gameOver();else for(let t=0;t<Game.H;t++)for(let e=0;e<Game.W;e++)this.field[t][e].draw()}}class GameMulti extends Game{constructor(e,t,a){super(e,t,a),Manager.socket.on("updateTimer",e=>{this.timeLimit=e}),Manager.socket.on("opponentDisconnected",()=>{alert("対戦相手の接続が切れました。あなたの勝ちです。"),alert("チャットルームに戻ります。"),setTimeout(()=>{location.href="chat"},5e3)})}getSimpleField(){let s=new Array(Game.H);for(let a=0;a<Game.H;a++){s[a]=[];for(let t=0;t<Game.W;t++){let e=this.field[a][t];s[a].push([e.getLit(),e.getDesign()])}}return s}updateScore(){Manager.socket.emit("updateScoreRequest",{score:this.score,keyWord:Manager.user.keyWord})}updateCombo(){Manager.socket.emit("updateComboRequest",{combo:this.combo,keyWord:Manager.user.keyWord})}updateTimer(){}setGameOver(){super.setGameOver(),Manager.socket.emit("gameOverRequest",Manager.user.keyWord)}sendField(){Manager.socket.emit("sendFieldRequest",{field:this.getSimpleField(),keyWord:Manager.user.keyWord})}draw(){super.draw(),this.sendField()}}Manager.user||(location.href="chat"),Manager.socket.emit("joinUserToGameRequest",Manager.user.keyWord),Manager.socket.on("joinUserToGameResponse",e=>{switch(e){case"wait":console.log("対戦相手を待っています。。。");break;case"overCapacity":alert("店員オーバー"),setTimeout(()=>{location.href="chat"},2e3);break;case"disavailable":alert("対戦は終了しました。"),setTimeout(()=>{location.href="chat"},2e3)}}),Manager.socket.on("start",()=>{Manager.gameStart=!0,Manager.loadingID1&&clearInterval(Manager.loadingID1),Manager.loadingID2&&clearInterval(Manager.loadingID2)}),onunload=()=>{Manager.socket.disconnect()};const sketch=a=>{let s,r,i;a.preload=()=>{Background.loadBGMS(a),Pattern.setDesign(a)},a.setup=()=>{var e=1450;let t=a.createCanvas(e,800);Background.set(),t.position(a.displayWidth/2-725,a.displayHeight/2-450),t.style("z-index: -1;"),s=new GameMulti(a,320,50),r=new Opponent(a,795,50),i=new Loading(a,679,354)},a.draw=()=>{a.background(0),i.draw(),Manager.gameStart&&(Background.loopBGM(a),s.draw(),r.draw())}},multi=new p5(sketch,"#screen");